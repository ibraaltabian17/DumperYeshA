name: EPG & Channels Update

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:
  push:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: ["lts/*"]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      
      - name: Clone EPG Repository and Install Dependencies
        run: |
          git clone https://github.com/iptv-org/epg.git ~/epg
          cd ~/epg
          npm install
      
      - name: Update Channels
        run: |
          cd ~/epg
          # Cubmu channels (Indonesian and English)
          npm run channels:parse -- --config=sites/cubmu.com/cubmu.com.config.js --output=sites/cubmu.com/cubmu.com_id.channels.xml --set lang=id > /dev/null || echo "Error parsing Cubmu Indonesian channels, skipping."
          npm run channels:parse -- --config=sites/cubmu.com/cubmu.com.config.js --output=sites/cubmu.com/cubmu.com_en.channels.xml --set lang=en > /dev/null || echo "Error parsing Cubmu English channels, skipping."
          echo "Cubmu Channels processing completed."
          
          npm run channels:parse -- --config=sites/dens.tv/dens.tv.config.js --output=sites/dens.tv/dens.tv.channels.xml > /dev/null || echo "Error parsing Dens channels, skipping."
          echo "Dens Channels processing completed."
          
          npm run channels:parse -- --config=sites/firstmedia.com/firstmedia.com.config.js --output=sites/firstmedia.com/firstmedia.com.channels.xml > /dev/null || echo "Error parsing Firstmedia channels, skipping."
          echo "Firstmedia Channels processing completed."
          
          npm run channels:parse -- --config=sites/indihometv.com/indihometv.com.config.js --output=sites/indihometv.com/indihometv.com.channels.xml > /dev/null || echo "Error parsing Indihome channels, skipping."
          echo "Indihome Channels processing completed."
          
          npm run channels:parse -- --config=sites/mncvision.id/mncvision.id.config.js --output=sites/mncvision.id/mncvision.id_id.channels.xml --set lang=id > /dev/null || echo "Error parsing MNC Vision Indonesian channels, skipping."
          npm run channels:parse -- --config=sites/mncvision.id/mncvision.id.config.js --output=sites/mncvision.id/mncvision.id_en.channels.xml --set lang=en > /dev/null || echo "Error parsing MNC Vision English channels, skipping."
          echo "MNC Vision Channels processing completed."
          
          npm run channels:parse -- --config=sites/vidio.com/vidio.com.config.js --output=sites/vidio.com/vidio.com.channels.xml > /dev/null || echo "Error parsing Vidio channels, skipping."
          echo "Vidio Channels processing completed."
          
          npm run channels:parse -- --config=sites/visionplus.id/visionplus.id.config.js --output=sites/visionplus.id/visionplus.id.channels.xml > /dev/null || echo "Error parsing Visionplus channels, skipping."
          echo "Visionplus Channels processing completed."
      
      - name: Update EPG
        run: |
          cd ~/epg
          npm run grab -- --site=cubmu.com --output=cubmu.xml --maxConnections=10 --lang id > /dev/null || echo "Error grabbing Cubmu EPG, skipping."
          echo "Cubmu EPG processed."
          
          npm run grab -- --site=dens.tv --output=dens.xml --maxConnections=10 > /dev/null || echo "Error grabbing Dens EPG, skipping."
          echo "Dens EPG processed."
          
          npm run grab -- --site=firstmedia.com --output=firstmedia.xml --maxConnections=10 > /dev/null || echo "Error grabbing Firstmedia EPG, skipping."
          echo "Firstmedia EPG processed."
          
          npm run grab -- --site=indihometv.com --output=indihome.xml --maxConnections=10 > /dev/null || echo "Error grabbing Indihome EPG, skipping."
          echo "Indihome EPG processed."
          
          npm run grab -- --site=mncvision.id --output=mncvision.xml --maxConnections=10 > /dev/null || echo "Error grabbing MNC Vision EPG, skipping."
          echo "MNC Vision EPG processed."
          
          npm run grab -- --site=vidio.com --output=vidio.xml --maxConnections=10 > /dev/null || echo "Error grabbing Vidio EPG, skipping."
          echo "Vidio EPG processed."
          
          npm run grab -- --site=visionplus.id --output=visionplus.xml --maxConnections=10 > /dev/null || echo "Error grabbing Visionplus EPG, skipping."
          echo "Visionplus EPG processed."
      
      - name: Merge XML Files and Remove Duplicates
        run: |
          cd ~/epg
          python3 - <<'EOF'
          import xml.etree.ElementTree as ET
          import os

          # List of XML files to merge
          files = ['cubmu.xml', 'dens.xml', 'firstmedia.xml', 'indihome.xml', 'mncvision.xml', 'vidio.xml', 'visionplus.xml']
          merged_root = ET.Element("tv")
          channels = {}
          programmes = {}

          for filename in files:
              if not os.path.exists(filename):
                  print(f"{filename} not found, skipping.")
                  continue
              try:
                  tree = ET.parse(filename)
              except ET.ParseError as e:
                  print(f"Error parsing {filename}: {e}. Skipping.")
                  continue
              root = tree.getroot()
              for child in root:
                  if child.tag == 'channel':
                      channel_id = child.get('id')
                      if channel_id and channel_id not in channels:
                          channels[channel_id] = child
                  elif child.tag == 'programme':
                      key = (child.get('start'), child.get('stop'), child.get('channel'))
                      if key not in programmes:
                          programmes[key] = child

          # Append unique channels and programmes to the merged root
          for channel in channels.values():
              merged_root.append(channel)
          for programme in programmes.values():
              merged_root.append(programme)

          # Write the merged XML to tv.xml with an XML declaration
          tree = ET.ElementTree(merged_root)
          tree.write("tv.xml", encoding='utf-8', xml_declaration=True)
          print("Merged XML files into tv.xml with duplicates removed.")
          EOF
      
      - name: Push tv.xml
        run: |
          cd ~/epg
          mkdir -p Dump-epg
          cp tv.xml Dump-epg/
          cd Dump-epg
          git config --global user.name "AltosTVRBot"
          git config --global user.email "TestBot@example.org"
          git init
          git add .
          git commit -m "Automatically Update merged tv.xml"
          git branch -M dump-epg
          git remote add origin https://ibraaltabian17:${{ secrets.PA_TOKEN }}@github.com/ibraaltabian17/DumperYeshA.git
          git push -u origin dump-epg -f
